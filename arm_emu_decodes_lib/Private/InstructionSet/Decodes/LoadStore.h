#if !defined(LOADSTORE_H_INCLUDED_8994011C_4196_443A_BABE_4FF197AC10E4)
    #define LOADSTORE_H_INCLUDED_8994011C_4196_443A_BABE_4FF197AC10E4

// Based on C4.1.4 A64 instruction set encoding

    #include <API/Api.h>
    #include <InstructionSet/Decodes/DecodeGroup.h>
    #include <Utility/Singleton.h>
    #include <Utility/Utilities.h>
    #include <concepts>
    #include <cstdint>
    #include <numeric>

BEGIN_NAMESPACE

enum class A64LoadStoreGroup : std::uint32_t
{
    ADVANCED_SIMD_LOAD_STORE_MULTIPLE_STRUCTURES,
    ADVANCED_SIMD_LOAD_STORE_MULTIPLE_STRUCTURES_POST_INDEXED,
    ADVANCED_SIMD_LOAD_STORE_SINGLE_STRUCTURE,
    ADVANCED_SIMD_LOAD_STORE_SINGLE_STRUCTURE_POST_INDEXED,
    LOAD_STORE_MEMORY_TAG,
    LOAD_STORE_EXCLUSIVE,
    LDAPR_STLR_UNSCALED_IMMEDIATE,
    LOAD_REGISTER_LITERAL,
    LOAD_STORE_NO_ALLOCATE_PAIR_OFFSET,
    LOAD_STORE_REGISTER_PAIR_POST_INDEXED,
    LOAD_STORE_REGISTER_PAIR_OFFSET,
    LOAD_STORE_REGISTER_PAIR_PRE_INDEXED,
    LOAD_STORE_REGISTER_UNSCALED_IMMEDIATE,
    LOAD_STORE_REGISTER_IMMEDIATE_POST_INDEXED,
    LOAD_STORE_REGISTER_UNPRIVILEGED,
    LOAD_STORE_REGISTER_IMMEDIATE_PRE_INDEXED,
    ATOMIC_MEMORY_OPERATION,
    LOAD_STORE_REGISTER_REGISTER_OFFSET,
    LOAD_STORE_REGISTER_PAC,
    LOAD_STORE_REGISTER_UNSIGNED_IMMEDIATE,

    ARM_EMU_COUNT,

    Undefined = std::numeric_limits< std::underlying_type_t< A64LoadStoreGroup > >::max(),
};

static constexpr Table< A64LoadStoreGroup, std::underlying_type_t< A64LoadStoreGroup >,
                        enum_size_v< A64LoadStoreGroup > >
    A64LoadStoreGroupTable { { {
        { 0b1011'1111'1011'1111'0000'0000'0000'0000, 0b0000'1100'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_MULTIPLE_STRUCTURES },
        { 0b1011'1111'1010'0000'0000'0000'0000'0000, 0b0000'1100'1000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_MULTIPLE_STRUCTURES_POST_INDEXED },
        { 0b1011'1111'1001'1111'0000'0000'0000'0000, 0b0000'1101'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_SINGLE_STRUCTURE },
        { 0b1011'1101'1000'0000'0000'0000'0000'0000, 0b0000'1101'1000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_SINGLE_STRUCTURE_POST_INDEXED },
        { 0b1111'1111'0010'0000'0000'0000'0000'0000, 0b1101'1001'0010'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_MEMORY_TAG },
        { 0b0011'1111'0000'0000'0000'0000'0000'0000, 0b0000'1000'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_EXCLUSIVE },
        { 0b0011'1111'0010'0000'0000'1100'0000'0000, 0b0001'1001'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LDAPR_STLR_UNSCALED_IMMEDIATE },
        { 0b0011'1011'0000'0000'0000'0000'0000'0000, 0b0001'1000'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_REGISTER_LITERAL },
        { 0b0011'1011'1000'0000'0000'0000'0000'0000, 0b0010'1000'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_NO_ALLOCATE_PAIR_OFFSET },
        { 0b0011'1011'1000'0000'0000'0000'0000'0000, 0b0010'1000'1000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_PAIR_POST_INDEXED },
        { 0b0011'1011'1000'0000'0000'0000'0000'0000, 0b0010'1001'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_PAIR_OFFSET },
        { 0b0011'1011'1000'0000'0000'0000'0000'0000, 0b0010'1001'1000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_PAIR_PRE_INDEXED },
        { 0b0011'1011'0010'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_UNSCALED_IMMEDIATE },
        { 0b0011'1011'0010'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'0100'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_IMMEDIATE_POST_INDEXED },
        { 0b0011'1011'0010'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'1000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_UNPRIVILEGED },
        { 0b0011'1011'0010'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'1100'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_IMMEDIATE_PRE_INDEXED },
        { 0b0011'1011'0010'0000'0000'1100'0000'0000, 0b0011'1000'0010'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::ATOMIC_MEMORY_OPERATION },
        { 0b0011'1011'0010'0000'0000'1100'0000'0000, 0b0011'1000'0010'0000'0000'1000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_REGISTER_OFFSET },
        { 0b0011'1011'0010'0000'0000'0100'0000'0000, 0b0011'1000'0010'0000'0000'0100'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_PAC },
        { 0b0011'1011'0000'0000'0000'0000'0000'0000, 0b0011'1001'0000'0000'0000'0000'0000'0000,
          A64LoadStoreGroup::LOAD_STORE_REGISTER_UNSIGNED_IMMEDIATE },
    } } };

class ARMEMU_API LoadStoreGroup final : public DecodeGroup< A64LoadStoreGroup > {
  protected:
    [[nodiscard]] LoadStoreGroup() noexcept = default;
    DELETE_COPY_CLASS(LoadStoreGroup)
    DELETE_MOVE_CLASS(LoadStoreGroup)

  public:
    DECLARE_AS_SINGLETON(LoadStoreGroup, true)

    enum class AdvancedSIMDLoadStoreMultipleStructures : std::uint32_t
    {
        ST4_MULTI,
        ST1_4R_MULTI,
        ST3_MULTI,
        ST1_3R_MULTI,
        ST1_1R_MULTI,
        ST2_MULTI,
        ST1_2R_MULTI,
        LD4_MULTI,
        LD1_4R_MULTI,
        LD3_MULTI,
        LD1_3R_MULTI,
        LD1_1R_MULTI,
        LD2_MULTI,
        LD1_2R_MULTI,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< AdvancedSIMDLoadStoreMultipleStructures > >::max(),
    };
    enum class AdvancedSIMDLoadStoreMultipleStructuresPostIndexed : std::uint32_t
    {
        ST4r_MULTI,
        ST1r_4R_MULTI,
        ST3r_MULTI,
        ST1r_3R_MULTI,
        ST1r_1R_MULTI,
        ST2r_MULTI,
        ST1r_2R_MULTI,
        ST4i_MULTI,
        ST1i_4R_MULTI,
        ST3i_MULTI,
        ST1i_3R_MULTI,
        ST1i_1R_MULTI,
        ST2i_MULTI,
        ST1i_2R_MULTI,
        LD4r_MULTI,
        LD1r_4R_MULTI,
        LD3r_MULTI,
        LD1r_3R_MULTI,
        LD1r_1R_MULTI,
        LD2r_MULTI,
        LD1r_2R_MULTI,
        LD4i_MULTI,
        LD1i_4R_MULTI,
        LD3i_MULTI,
        LD1i_3R_MULTI,
        LD1i_1R_MULTI,
        LD2i_MULTI,
        LD1i_2R_MULTI,

        ARM_EMU_COUNT,

        Undefined =
            std::numeric_limits< std::underlying_type_t< AdvancedSIMDLoadStoreMultipleStructuresPostIndexed > >::max(),
    };
    enum class AdvancedSIMDLoadStoreSingleStructure : std::uint32_t
    {
        ST1_8BIT_SINGLE,
        ST3_8BIT_SINGLE,
        ST1_16BIT_SINGLE,
        ST3_16BIT_SINGLE,
        ST1_32BIT_SINGLE,
        ST1_64BIT_SINGLE,
        ST3_32BIT_SINGLE,
        ST3_64BIT_SINGLE,
        ST2_8BIT_SINGLE,
        ST4_8BIT_SINGLE,
        ST2_16BIT_SINGLE,
        ST4_16BIT_SINGLE,
        ST2_32BIT_SINGLE,
        ST2_64BIT_SINGLE,
        ST4_32BIT_SINGLE,
        ST4_64BIT_SINGLE,
        LD1_8BIT_SINGLE,
        LD3_8BIT_SINGLE,
        LD1_16BIT_SINGLE,
        LD3_16BIT_SINGLE,
        LD1_32BIT_SINGLE,
        LD1_64BIT_SINGLE,
        LD3_32BIT_SINGLE,
        LD3_64BIT_SINGLE,
        LD1R,
        LD3R,
        LD2_8BIT_SINGLE,
        LD4_8BIT_SINGLE,
        LD2_16BIT_SINGLE,
        LD4_16BIT_SINGLE,
        LD2_32BIT_SINGLE,
        LD2_64BIT_SINGLE,
        LD4_32BIT_SINGLE,
        LD4_64BIT_SINGLE,
        LD2R,
        LD4R,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< AdvancedSIMDLoadStoreSingleStructure > >::max(),
    };
    enum class AdvancedSIMDLoadStoreSingleStructurePostIndexed : std::uint32_t
    {
        ST1r_8BIT_SINGLE,
        ST3r_8BIT_SINGLE,
        ST1r_16BIT_SINGLE,
        ST3r_16BIT_SINGLE,
        ST1r_32BIT_SINGLE,
        ST1r_64BIT_SINGLE,
        ST3r_32BIT_SINGLE,
        ST3r_64BIT_SINGLE,
        ST1i_8BIT_SINGLE,
        ST3i_8BIT_SINGLE,
        ST1i_16BIT_SINGLE,
        ST3i_16BIT_SINGLE,
        ST1i_32BIT_SINGLE,
        ST1i_64BIT_SINGLE,
        ST3i_32BIT_SINGLE,
        ST3i_64BIT_SINGLE,
        ST2r_8BIT_SINGLE,
        ST4r_8BIT_SINGLE,
        ST2r_16BIT_SINGLE,
        ST4r_16BIT_SINGLE,
        ST2r_32BIT_SINGLE,
        ST2r_64BIT_SINGLE,
        ST4r_32BIT_SINGLE,
        ST4r_64BIT_SINGLE,
        ST2i_8BIT_SINGLE,
        ST4i_8BIT_SINGLE,
        ST2i_16BIT_SINGLE,
        ST4i_16BIT_SINGLE,
        ST2i_32BIT_SINGLE,
        ST2i_64BIT_SINGLE,
        ST4i_32BIT_SINGLE,
        ST4i_64BIT_SINGLE,
        LD1r_8BIT_SINGLE,
        LD3r_8BIT_SINGLE,
        LD1r_16BIT_SINGLE,
        LD3r_16BIT_SINGLE,
        LD1r_32BIT_SINGLE,
        LD1r_64BIT_SINGLE,
        LD3r_32BIT_SINGLE,
        LD3r_64BIT_SINGLE,
        LD1Rr,
        LD3Rr,
        LD1i_8BIT_SINGLE,
        LD3i_8BIT_SINGLE,
        LD1i_16BIT_SINGLE,
        LD3i_16BIT_SINGLE,
        LD1i_32BIT_SINGLE,
        LD1i_64BIT_SINGLE,
        LD3i_32BIT_SINGLE,
        LD3i_64BIT_SINGLE,
        LD1Ri,
        LD3Ri,
        LD2r_8BIT_SINGLE,
        LD4r_8BIT_SINGLE,
        LD2r_16BIT_SINGLE,
        LD4r_16BIT_SINGLE,
        LD2r_32BIT_SINGLE,
        LD2r_64BIT_SINGLE,
        LD4r_32BIT_SINGLE,
        LD4r_64BIT_SINGLE,
        LD2Rr,
        LD4Rr,
        LD2i_8BIT_SINGLE,
        LD4i_8BIT_SINGLE,
        LD2i_16BIT_SINGLE,
        LD4i_16BIT_SINGLE,
        LD2i_32BIT_SINGLE,
        LD2i_64BIT_SINGLE,
        LD4i_32BIT_SINGLE,
        LD4i_64BIT_SINGLE,
        LD2Ri,
        LD4Ri,

        ARM_EMU_COUNT,

        Undefined =
            std::numeric_limits< std::underlying_type_t< AdvancedSIMDLoadStoreSingleStructurePostIndexed > >::max(),
    };
    enum class LoadStoreMemoryTag : std::uint32_t
    {
        STG_ENCODNIG,
        STZGM,
        LDG,
        STZG_ENCODNIG,
        ST2G_ENCODNIG,
        STGM,
        STZ2G_ENCODNIG,
        LDGM,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreMemoryTag > >::max(),
    };
    enum class LoadStoreExclusive : std::uint32_t
    {
        STXRB,
        STLXRB,
        CASP_32BIT,
        CASPL_32BIT,
        LDXRB,
        LDAXRB,
        CASPA_32BIT,
        CASPAL_32BIT,
        STLLRB,
        STLRB,
        CASB,
        CASLB,
        LDLARB,
        LDARB,
        CASAB,
        CASALB,
        STXRH,
        STLXRH,
        CASP_64BIT,
        CASPL_64BIT,
        LDXRH,
        LDAXRH,
        CASPA_64BIT,
        CASPAL_64BIT,
        STLLRH,
        STLRH,
        CASH,
        CASLH,
        LDLARH,
        LDARH,
        CASAH,
        CASALH,
        STXR_32BIT,
        STLXR_32BIT,
        STXP_32BIT,
        STLXP_32BIT,
        LDXR_32BIT,
        LDAXR_32BIT,
        LDXP_32BIT,
        LDAXP_32BIT,
        STLLR_32BIT,
        STLR_32BIT,
        CAS_32BIT,
        CASL_32BIT,
        LDLAR_32BIT,
        LDAR_32BIT,
        CASA_32BIT,
        CASAL_32BIT,
        STXR_64BIT,
        STLXR_64BIT,
        STXP_64BIT,
        STLXP_64BIT,
        LDXR_64BIT,
        LDAXR_64BIT,
        LDXP_64BIT,
        LDAXP_64BIT,
        STLLR_64BIT,
        STLR_64BIT,
        CAS_64BIT,
        CASL_64BIT,
        LDLAR_64BIT,
        LDAR_64BIT,
        CASA_64BIT,
        CASAL_64BIT,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreExclusive > >::max(),
    };
    enum class LdaprStlrUnscaledImmediate : std::uint32_t
    {
        STLURB,
        LDAPURB,
        LDAPURSB_64BIT,
        LDAPURSB_32BIT,
        STLURH,
        LDAPURH,
        LDAPURSH_64BIT,
        LDAPURSH_32BIT,
        STLUR_32BIT,
        LDAPUR_32BIT,
        LDAPURSW,
        STLUR_64BIT,
        LDAPUR_64BIT,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LdaprStlrUnscaledImmediate > >::max(),
    };
    enum class LoadRegisterLiteral : std::uint32_t
    {
        LDR_32BIT_LITERAL,
        LDR_32BIT_LITERAL_SIMD,
        LDR_64BIT_LITERAL,
        LDR_64BIT_LITERAL_SIMD,
        LDRSW_LITERAL,
        LDR_128BIT_LITERAL_SIMD,
        PRFM_LITERAL,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadRegisterLiteral > >::max(),
    };
    enum class LoadStoreNoAllocatePairOffset : std::uint32_t
    {
        STNP_32BIT,
        LDNP_32BIT,
        STNP_32BIT_SIMD,
        LDNP_32BIT_SIMD,
        STNP_64BIT_SIMD,
        LDNP_64BIT_SIMD,
        STNP_64BIT,
        LDNP_64BIT,
        STNP_128BIT_SIMD,
        LDNP_128BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreNoAllocatePairOffset > >::max(),
    };
    enum class LoadStoreRegisterPairPostIndexed : std::uint32_t
    {
        STP_32BIT,
        LDP_32BIT,
        STP_32BIT_SIMD,
        LDP_32BIT_SIMD,
        STGP,
        LDPSW,
        STP_64BIT_SIMD,
        LDP_64BIT_SIMD,
        STP_64BIT,
        LDP_64BIT,
        STP_128BIT_SIMD,
        LDP_128BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterPairPostIndexed > >::max(),
    };
    enum class LoadStoreRegisterPairOffset : std::uint32_t
    {
        STP_32BIT,
        LDP_32BIT,
        STP_32BIT_SIMD,
        LDP_32BIT_SIMD,
        STGP,
        LDPSW,
        STP_64BIT_SIMD,
        LDP_64BIT_SIMD,
        STP_64BIT,
        LDP_64BIT,
        STP_128BIT_SIMD,
        LDP_128BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterPairOffset > >::max(),
    };
    enum class LoadStoreRegisterPairPreIndexed : std::uint32_t
    {
        STP_32BIT,
        LDP_32BIT,
        STP_32BIT_SIMD,
        LDP_32BIT_SIMD,
        STGP,
        LDPSW,
        STP_64BIT_SIMD,
        LDP_64BIT_SIMD,
        STP_64BIT,
        LDP_64BIT,
        STP_128BIT_SIMD,
        LDP_128BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterPairPreIndexed > >::max(),
    };
    enum class LoadStoreRegisterUnscaledImmediate : std::uint32_t
    {
        STURB,
        LDURB,
        LDURSB_64BIT,
        LDURSB_32BIT,
        STUR_8BIT_SIMD,
        LDUR_8BIT_SIMD,
        STUR_128BIT_SIMD,
        LDUR_128BIT_SIMD,
        STURH,
        LDURH,
        LDURSH_64BIT,
        LDURSH_32BIT,
        STUR_16BIT_SIMD,
        LDUR_16BIT_SIMD,
        STUR_32BIT,
        LDUR_32BIT,
        LDURSW,
        STUR_32BIT_SIMD,
        LDUR_32BIT_SIMD,
        STUR_64BIT,
        LDUR_64BIT,
        PRFUM,
        STUR_64BIT_SIMD,
        LDUR_64BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterUnscaledImmediate > >::max(),
    };
    enum class LoadStoreRegisterImmediatePostIndexed : std::uint32_t
    {
        STRBi,
        LDRBi,
        LDRSBi_64BIT,
        LDRSBi_32BIT,
        STRi_8BIT_SIMD,
        LDRi_8BIT_SIMD,
        STRi_128BIT_SIMD,
        LDRi_128BIT_SIMD,
        STRHi,
        LDRHi,
        LDRSHi_64BIT,
        LDRSHi_32BIT,
        STRi_16BIT_SIMD,
        LDRi_16BIT_SIMD,
        STRi_32BIT,
        LDRi_32BIT,
        LDRSWi,
        STRi_32BIT_SIMD,
        LDRi_32BIT_SIMD,
        STRi_64BIT,
        LDRi_64BIT,
        STRi_64BIT_SIMD,
        LDRi_64BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterImmediatePostIndexed > >::max(),
    };
    enum class LoadStoreRegisterUnprivileged : std::uint32_t
    {
        STTRB,
        LDTRB,
        LDTRSB_64BIT,
        LDTRSB_32BIT,
        STTRH,
        LDTRH,
        LDTRSH_64BIT,
        LDTRSH_32BIT,
        STTR_32BIT,
        LDTR_32BIT,
        LDTRSW,
        STTR_64BIT,
        LDTR_64BIT,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterUnprivileged > >::max(),
    };
    enum class LoadStoreRegisterImmediatePreIndexed : std::uint32_t
    {
        STRBi,
        LDRBi,
        LDRSBi_64BIT,
        LDRSBi_32BIT,
        STRi_8BIT_SIMD,
        LDRi_8BIT_SIMD,
        STRi_128BIT_SIMD,
        LDRi_128BIT_SIMD,
        STRHi,
        LDRHi,
        LDRSHi_64BIT,
        LDRSHi_32BIT,
        STRi_16BIT_SIMD,
        LDRi_16BIT_SIMD,
        STRi_32BIT,
        LDRi_32BIT,
        LDRSWi,
        STRi_32BIT_SIMD,
        LDRi_32BIT_SIMD,
        STRi_64BIT,
        LDRi_64BIT,
        STRi_64BIT_SIMD,
        LDRi_64BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterImmediatePreIndexed > >::max(),
    };
    enum class AtomicMemoryOperation : std::uint32_t
    {
        LDADDB,
        LDCLRB,
        LDEORB,
        LDSETB,
        LDSMAXB,
        LDSMINB,
        LDUMAXB,
        LDUMINB,
        SWPB,
        LDADDLB,
        LDCLRLB,
        LDEORLB,
        LDSETLB,
        LDSMAXLB,
        LDSMINLB,
        LDUMAXLB,
        LDUMINLB,
        SWPLB,
        LDADDAB,
        LDCLRAB,
        LDEORAB,
        LDSETAB,
        LDSMAXAB,
        LDSMINAB,
        LDUMAXAB,
        LDUMINAB,
        SWPAB,
        LDAPRB,
        LDADDALB,
        LDCLRALB,
        LDEORALB,
        LDSETALB,
        LDSMAXALB,
        LDSMINALB,
        LDUMAXALB,
        LDUMINALB,
        SWPALB,
        LDADDH,
        LDCLRH,
        LDEORH,
        LDSETH,
        LDSMAXH,
        LDSMINH,
        LDUMAXH,
        LDUMINH,
        SWPH,
        LDADDLH,
        LDCLRLH,
        LDEORLH,
        LDSETLH,
        LDSMAXLH,
        LDSMINLH,
        LDUMAXLH,
        LDUMINLH,
        SWPLH,
        LDADDAH,
        LDCLRAH,
        LDEORAH,
        LDSETAH,
        LDSMAXAH,
        LDSMINAH,
        LDUMAXAH,
        LDUMINAH,
        SWPAH,
        LDAPRH,
        LDADDALH,
        LDCLRALH,
        LDEORALH,
        LDSETALH,
        LDSMAXALH,
        LDSMINALH,
        LDUMAXALH,
        LDUMINALH,
        SWPALH,
        LDADD_32BIT,
        LDCLR_32BIT,
        LDEOR_32BIT,
        LDSET_32BIT,
        LDSMAX_32BIT,
        LDSMIN_32BIT,
        LDUMAX_32BIT,
        LDUMIN_32BIT,
        SWP_32BIT,
        LDADDL_32BIT,
        LDCLRL_32BIT,
        LDEORL_32BIT,
        LDSETL_32BIT,
        LDSMAXL_32BIT,
        LDSMINL_32BIT,
        LDUMAXL_32BIT,
        LDUMINL_32BIT,
        SWPL_32BIT,
        LDADDA_32BIT,
        LDCLRA_32BIT,
        LDEORA_32BIT,
        LDSETA_32BIT,
        LDSMAXA_32BIT,
        LDSMINA_32BIT,
        LDUMAXA_32BIT,
        LDUMINA_32BIT,
        SWPA_32BIT,
        LDAPR_32BIT,
        LDADDAL_32BIT,
        LDCLRAL_32BIT,
        LDEORAL_32BIT,
        LDSETAL_32BIT,
        LDSMAXAL_32BIT,
        LDSMINAL_32BIT,
        LDUMAXAL_32BIT,
        LDUMINAL_32BIT,
        SWPAL_32BIT,
        LDADD_64BIT,
        LDCLR_64BIT,
        LDEOR_64BIT,
        LDSET_64BIT,
        LDSMAX_64BIT,
        LDSMIN_64BIT,
        LDUMAX_64BIT,
        LDUMIN_64BIT,
        SWP_64BIT,
        LDADDL_64BIT,
        LDCLRL_64BIT,
        LDEORL_64BIT,
        LDSETL_64BIT,
        LDSMAXL_64BIT,
        LDSMINL_64BIT,
        LDUMAXL_64BIT,
        LDUMINL_64BIT,
        SWPL_64BIT,
        LDADDA_64BIT,
        LDCLRA_64BIT,
        LDEORA_64BIT,
        LDSETA_64BIT,
        LDSMAXA_64BIT,
        LDSMINA_64BIT,
        LDUMAXA_64BIT,
        LDUMINA_64BIT,
        SWPA_64BIT,
        LDAPR_64BIT,
        LDADDAL_64BIT,
        LDCLRAL_64BIT,
        LDEORAL_64BIT,
        LDSETAL_64BIT,
        LDSMAXAL_64BIT,
        LDSMINAL_64BIT,
        LDUMAXAL_64BIT,
        LDUMINAL_64BIT,
        SWPAL_64BIT,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< AtomicMemoryOperation > >::max(),
    };
    enum class LoadStoreRegisterRegisterOffset : std::uint32_t
    {
        STRBr_EXTENDED,
        STRBr_SHIFTED,
        LDRBr_EXTENDED,
        LDRBr_SHIFTED,
        LDRSBr_64BIT_EXTENDED,
        LDRSBr_64BIT_SHIFTED,
        LDRSBr_32BIT_EXTENDED,
        LDRSBr_32BIT_SHIFTED,
        STRr_SIMD,
        LDRr_SIMD,
        STRHr,
        LDRHr,
        LDRSHr_64BIT,
        LDRSHr_32BIT,
        STRr_32BIT,
        LDRr_32BIT,
        LDRSWr,
        STRr_64BIT,
        LDRr_64BIT,
        PRFMr,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterRegisterOffset > >::max(),
    };
    enum class LoadStoreRegisterPAC : std::uint32_t
    {
        LDRAA_OFFSET,
        LDRAA_PREINDEXED,
        LDRAB_OFFSET,
        LDRAB_PREINDEXED,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterPAC > >::max(),
    };
    enum class LoadStoreRegisterUnsignedImmediate : std::uint32_t
    {
        STRBi,
        LDRBi,
        LDRSBi_64BIT,
        LDRSBi_32BIT,
        STRi_8BIT_SIMD,
        LDRi_8BIT_SIMD,
        STRi_128BIT_SIMD,
        LDRi_128BIT_SIMD,
        STRHi,
        LDRHi,
        LDRSHi_64BIT,
        LDRSHi_32BIT,
        STRi_16BIT_SIMD,
        LDRi_16BIT_SIMD,
        STRi_32BIT,
        LDRi_32BIT,
        LDRSWi,
        STRi_32BIT_SIMD,
        LDRi_32BIT_SIMD,
        STRi_64BIT,
        LDRi_64BIT,
        PRFMi,
        STRi_64BIT_SIMD,
        LDRi_64BIT_SIMD,

        ARM_EMU_COUNT,

        Undefined = std::numeric_limits< std::underlying_type_t< LoadStoreRegisterUnsignedImmediate > >::max(),
    };

  private:
    inline static constexpr Table< AdvancedSIMDLoadStoreMultipleStructures,
                                   std::underlying_type_t< AdvancedSIMDLoadStoreMultipleStructures >,
                                   enum_size_v< AdvancedSIMDLoadStoreMultipleStructures > >
        AdvancedSIMDLoadStoreMultipleStructuresTable { { {
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST4_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST1_4R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST3_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST1_3R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'0111'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST1_1R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST2_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0000'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::ST1_2R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD4_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD1_4R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD3_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD1_3R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'0111'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD1_1R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD2_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'0100'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructures::LD1_2R_MULTI },
        } } };
    inline static constexpr Table< AdvancedSIMDLoadStoreMultipleStructuresPostIndexed,
                                   std::underlying_type_t< AdvancedSIMDLoadStoreMultipleStructuresPostIndexed >,
                                   enum_size_v< AdvancedSIMDLoadStoreMultipleStructuresPostIndexed > >
        AdvancedSIMDLoadStoreMultipleStructuresPostIndexedTable { { {
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST4i_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1i_4R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST3i_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1i_3R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'0111'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1i_1R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST2i_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1001'1111'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1i_2R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST4r_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1r_4R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST3r_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1r_3R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'0111'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1r_1R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST2r_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1000'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::ST1r_2R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD4i_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1i_4R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD3i_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1i_3R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'0111'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1i_1R_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD2i_MULTI },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1100'1101'1111'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1i_2R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD4r_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1r_4R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD3r_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1r_3R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'0111'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1r_1R_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD2r_MULTI },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1100'1100'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreMultipleStructuresPostIndexed::LD1r_2R_MULTI },
        } } };
    inline static constexpr Table< AdvancedSIMDLoadStoreSingleStructure,
                                   std::underlying_type_t< AdvancedSIMDLoadStoreSingleStructure >,
                                   enum_size_v< AdvancedSIMDLoadStoreSingleStructure > >
        AdvancedSIMDLoadStoreSingleStructureTable { { {
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0000'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST1_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0000'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST3_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0000'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST1_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0000'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST3_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0000'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST1_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0000'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST1_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0000'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST3_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0000'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST3_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0010'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST2_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0010'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST4_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0010'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST2_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0010'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST4_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0010'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST2_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0010'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST2_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0010'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST4_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0010'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::ST4_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0100'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD1_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0100'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD3_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0100'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD1_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0100'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD3_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0100'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD1_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0100'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD1_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0100'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD3_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0100'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD3_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'0100'0000'1100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD1R },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'0100'0000'1110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD3R },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0110'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD2_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'0110'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD4_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0110'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD2_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'0110'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD4_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0110'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD2_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0110'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD2_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'0110'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD4_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'0110'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD4_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'0110'0000'1100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD2R },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'0110'0000'1110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructure::LD4R },
        } } };
    inline static constexpr Table< AdvancedSIMDLoadStoreSingleStructurePostIndexed,
                                   std::underlying_type_t< AdvancedSIMDLoadStoreSingleStructurePostIndexed >,
                                   enum_size_v< AdvancedSIMDLoadStoreSingleStructurePostIndexed > >
        AdvancedSIMDLoadStoreSingleStructurePostIndexedTable { { {
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1001'1111'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1001'1111'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1001'1111'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1001'1111'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1001'1111'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1001'1111'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1i_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1001'1111'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1001'1111'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3i_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1000'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1000'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1000'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1000'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1000'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1000'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST1r_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1000'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1000'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST3r_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1011'1111'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1011'1111'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1011'1111'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1011'1111'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1011'1111'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1011'1111'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2i_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1011'1111'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1011'1111'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4i_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1010'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1010'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1010'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1010'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1010'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1010'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST2r_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1010'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1010'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::ST4r_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1101'1111'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1101'1111'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1101'1111'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1101'1111'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1101'1111'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1101'1111'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1i_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1101'1111'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1101'1111'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3i_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'1101'1111'1100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1Ri },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'1101'1111'1110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3Ri },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1100'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1100'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1100'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1100'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1100'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1100'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1r_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1100'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1100'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3r_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1101'1100'0000'1100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD1Rr },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1101'1100'0000'1110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD3Rr },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1111'1111'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0000'0000'0000, 0b0000'1101'1111'1111'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4i_8BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1111'1111'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'0100'0000'0000, 0b0000'1101'1111'1111'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4i_16BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1111'1111'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1111'1111'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2i_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1110'1100'0000'0000, 0b0000'1101'1111'1111'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4i_32BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'1100'0000'0000, 0b0000'1101'1111'1111'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4i_64BIT_SINGLE },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'1111'1111'1100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2Ri },
            { 0b1011'1111'1111'1111'1111'0000'0000'0000, 0b0000'1101'1111'1111'1110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4Ri },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1110'0000'0000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0000'0000'0000, 0b0000'1101'1110'0000'0010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4r_8BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1110'0000'0100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'0100'0000'0000, 0b0000'1101'1110'0000'0110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4r_16BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1110'0000'1000'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1110'0000'1000'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2r_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1110'1100'0000'0000, 0b0000'1101'1110'0000'1010'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4r_32BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'1100'0000'0000, 0b0000'1101'1110'0000'1010'0100'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4r_64BIT_SINGLE },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1101'1110'0000'1100'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD2Rr },
            { 0b1011'1111'1110'0000'1111'0000'0000'0000, 0b0000'1101'1110'0000'1110'0000'0000'0000,
              AdvancedSIMDLoadStoreSingleStructurePostIndexed::LD4Rr },
        } } };
    inline static constexpr Table< LoadStoreMemoryTag, std::underlying_type_t< LoadStoreMemoryTag >,
                                   enum_size_v< LoadStoreMemoryTag > + 8 >
        LoadStoreMemoryTagTable { { {
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0010'0000'0000'0100'0000'0000,
              LoadStoreMemoryTag::STG_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0010'0000'0000'1000'0000'0000,
              LoadStoreMemoryTag::STG_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0010'0000'0000'1100'0000'0000,
              LoadStoreMemoryTag::STG_ENCODNIG },
            { 0b1111'1111'1111'1111'1111'1100'0000'0000, 0b1101'1001'0010'0000'0000'0000'0000'0000,
              LoadStoreMemoryTag::STZGM },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0110'0000'0000'0000'0000'0000,
              LoadStoreMemoryTag::LDG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0110'0000'0000'0100'0000'0000,
              LoadStoreMemoryTag::STZG_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0110'0000'0000'1000'0000'0000,
              LoadStoreMemoryTag::STZG_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0110'0000'0000'1100'0000'0000,
              LoadStoreMemoryTag::STZG_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'1010'0000'0000'0100'0000'0000,
              LoadStoreMemoryTag::ST2G_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'1010'0000'0000'1000'0000'0000,
              LoadStoreMemoryTag::ST2G_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'1010'0000'0000'1100'0000'0000,
              LoadStoreMemoryTag::ST2G_ENCODNIG },
            { 0b1111'1111'1111'1111'1111'1100'0000'0000, 0b1101'1001'1010'0000'0000'0000'0000'0000,
              LoadStoreMemoryTag::STGM },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'1110'0000'0000'0100'0000'0000,
              LoadStoreMemoryTag::STZ2G_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'1110'0000'0000'1000'0000'0000,
              LoadStoreMemoryTag::STZ2G_ENCODNIG },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'1110'0000'0000'1100'0000'0000,
              LoadStoreMemoryTag::STZ2G_ENCODNIG },
            { 0b1111'1111'1111'1111'1111'1100'0000'0000, 0b1101'1001'1110'0000'0000'0000'0000'0000,
              LoadStoreMemoryTag::LDGM },
        } } };
    inline static constexpr Table< LoadStoreExclusive, std::underlying_type_t< LoadStoreExclusive >,
                                   enum_size_v< LoadStoreExclusive > >
        LoadStoreExclusiveTable { { {
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STXRB },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'0000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLXRB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'0010'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASP_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'0010'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASPL_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDXRB },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'0100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAXRB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'0110'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASPA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'0110'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASPAL_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STLLRB },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'1000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLRB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'1010'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'1010'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASLB },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDLARB },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0000'1000'1100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDARB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'1110'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0000'1000'1110'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASALB },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STXRH },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'0000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLXRH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'0010'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASP_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'0010'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASPL_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDXRH },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'0100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAXRH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'0110'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASPA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'0110'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASPAL_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STLLRH },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'1000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLRH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'1010'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'1010'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASLH },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDLARH },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b0100'1000'1100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDARH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'1110'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0100'1000'1110'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASALH },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STXR_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLXR_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0010'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STXP_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0010'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLXP_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDXR_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAXR_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0110'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDXP_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'0110'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAXP_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STLLR_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'1000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLR_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1000'1000'1010'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CAS_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1000'1000'1010'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASL_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDLAR_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1000'1000'1100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAR_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1000'1000'1110'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1000'1000'1110'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASAL_32BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STXR_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLXR_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0010'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STXP_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0010'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLXP_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDXR_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAXR_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0110'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDXP_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'0110'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAXP_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreExclusive::STLLR_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'1000'0000'1000'0000'0000'0000,
              LoadStoreExclusive::STLR_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1100'1000'1010'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CAS_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1100'1000'1010'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASL_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreExclusive::LDLAR_64BIT },
            { 0b1111'1111'1110'0000'1000'0000'0000'0000, 0b1100'1000'1100'0000'1000'0000'0000'0000,
              LoadStoreExclusive::LDAR_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1100'1000'1110'0000'0111'1100'0000'0000,
              LoadStoreExclusive::CASA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1100'1000'1110'0000'1111'1100'0000'0000,
              LoadStoreExclusive::CASAL_64BIT },
        } } };
    inline static constexpr Table< LdaprStlrUnscaledImmediate, std::underlying_type_t< LdaprStlrUnscaledImmediate >,
                                   enum_size_v< LdaprStlrUnscaledImmediate > >
        LdaprStlrUnscaledImmediateTable { { {
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0001'1001'0000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::STLURB },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0001'1001'0100'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURB },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0001'1001'1000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURSB_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0001'1001'1100'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURSB_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0101'1001'0000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::STLURH },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0101'1001'0100'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURH },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0101'1001'1000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURSH_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0101'1001'1100'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURSH_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1001'1001'0000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::STLUR_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1001'1001'0100'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPUR_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1001'1001'1000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPURSW },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0000'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::STLUR_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1101'1001'0100'0000'0000'0000'0000'0000,
              LdaprStlrUnscaledImmediate::LDAPUR_64BIT },
        } } };
    inline static constexpr Table< LoadRegisterLiteral, std::underlying_type_t< LoadRegisterLiteral >,
                                   enum_size_v< LoadRegisterLiteral > >
        LoadRegisterLiteralTable { { {
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b0001'1000'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::LDR_32BIT_LITERAL },
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b0001'1100'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::LDR_32BIT_LITERAL_SIMD },
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b0101'1000'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::LDR_64BIT_LITERAL },
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b0101'1100'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::LDR_64BIT_LITERAL_SIMD },
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b1001'1000'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::LDRSW_LITERAL },
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b1001'1100'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::LDR_128BIT_LITERAL_SIMD },
            { 0b1111'1111'0000'0000'0000'0000'0000'0000, 0b1101'1000'0000'0000'0000'0000'0000'0000,
              LoadRegisterLiteral::PRFM_LITERAL },
        } } };
    inline static constexpr Table< LoadStoreNoAllocatePairOffset,
                                   std::underlying_type_t< LoadStoreNoAllocatePairOffset >,
                                   enum_size_v< LoadStoreNoAllocatePairOffset > >
        LoadStoreNoAllocatePairOffsetTable { { {
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::STNP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::LDNP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::STNP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::LDNP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::STNP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::LDNP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::STNP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::LDNP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::STNP_128BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreNoAllocatePairOffset::LDNP_128BIT_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterPairPostIndexed,
                                   std::underlying_type_t< LoadStoreRegisterPairPostIndexed >,
                                   enum_size_v< LoadStoreRegisterPairPostIndexed > >
        LoadStoreRegisterPairPostIndexedTable { { {
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::STP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::LDP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1100'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::STP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1100'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::LDP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::STGP },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::LDPSW },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1100'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::STP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1100'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::LDP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::STP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::LDP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1100'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::STP_128BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1100'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPostIndexed::LDP_128BIT_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterPairOffset, std::underlying_type_t< LoadStoreRegisterPairOffset >,
                                   enum_size_v< LoadStoreRegisterPairOffset > >
        LoadStoreRegisterPairOffsetTable { { {
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::STP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::LDP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::STP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::LDP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::STGP },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::LDPSW },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::STP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::LDP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::STP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::LDP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::STP_128BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairOffset::LDP_128BIT_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterPairPreIndexed,
                                   std::underlying_type_t< LoadStoreRegisterPairPreIndexed >,
                                   enum_size_v< LoadStoreRegisterPairPreIndexed > >
        LoadStoreRegisterPairPreIndexedTable { { {
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::STP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1001'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::LDP_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1101'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::STP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0010'1101'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::LDP_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::STGP },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1001'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::LDPSW },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1101'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::STP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0110'1101'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::LDP_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::STP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1001'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::LDP_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1101'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::STP_128BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1010'1101'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterPairPreIndexed::LDP_128BIT_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterUnscaledImmediate,
                                   std::underlying_type_t< LoadStoreRegisterUnscaledImmediate >,
                                   enum_size_v< LoadStoreRegisterUnscaledImmediate > >
        LoadStoreRegisterUnscaledImmediateTable { { {
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STURB },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURB },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURSB_64BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURSB_32BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_8BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_8BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1100'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_128BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0011'1100'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_128BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0111'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STURH },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0111'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURH },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0111'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURSH_64BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0111'1000'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURSH_32BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0111'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_16BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b0111'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_16BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1011'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_32BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1011'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_32BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1011'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDURSW },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1011'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_32BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1011'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_32BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1111'1000'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_64BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1111'1000'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_64BIT },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1111'1000'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::PRFUM },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1111'1100'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::STUR_64BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'0000'0000'0000, 0b1111'1100'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnscaledImmediate::LDUR_64BIT_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterImmediatePostIndexed,
                                   std::underlying_type_t< LoadStoreRegisterImmediatePostIndexed >,
                                   enum_size_v< LoadStoreRegisterImmediatePostIndexed > >
        LoadStoreRegisterImmediatePostIndexedTable { { {
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRBi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRBi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRSBi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRSBi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_8BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_8BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'1000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_128BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'1100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_128BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRHi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRHi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRSHi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRSHi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1100'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_16BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1100'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_16BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'1000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRSWi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1100'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_32BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1100'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_32BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1100'0000'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::STRi_64BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1100'0100'0000'0000'0100'0000'0000,
              LoadStoreRegisterImmediatePostIndexed::LDRi_64BIT_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterUnprivileged,
                                   std::underlying_type_t< LoadStoreRegisterUnprivileged >,
                                   enum_size_v< LoadStoreRegisterUnprivileged > >
        LoadStoreRegisterUnprivilegedTable { { {
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::STTRB },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0100'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRB },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRSB_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1100'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRSB_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::STTRH },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0100'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRH },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRSH_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1100'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRSH_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::STTR_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0100'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTR_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'1000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTRSW },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0000'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::STTR_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0100'0000'0000'1000'0000'0000,
              LoadStoreRegisterUnprivileged::LDTR_64BIT },
        } } };
    inline static constexpr Table< LoadStoreRegisterImmediatePreIndexed,
                                   std::underlying_type_t< LoadStoreRegisterImmediatePreIndexed >,
                                   enum_size_v< LoadStoreRegisterImmediatePreIndexed > >
        LoadStoreRegisterImmediatePreIndexedTable { { {
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRBi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRBi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRSBi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRSBi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_8BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_8BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'1000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_128BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'1100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_128BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRHi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRHi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRSHi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRSHi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1100'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_16BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1100'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_16BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'1000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRSWi },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1100'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_32BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1100'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_32BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1100'0000'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::STRi_64BIT_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1100'0100'0000'0000'1100'0000'0000,
              LoadStoreRegisterImmediatePreIndexed::LDRi_64BIT_SIMD },
        } } };
    inline static constexpr Table< AtomicMemoryOperation, std::underlying_type_t< AtomicMemoryOperation >,
                                   enum_size_v< AtomicMemoryOperation > >
        AtomicMemoryOperationTable { { {
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'0110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPLB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPAB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1010'0000'1100'0000'0000'0000,
              AtomicMemoryOperation::LDAPRB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0011'1000'1110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPALB },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'0110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPLH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPAH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1010'0000'1100'0000'0000'0000,
              AtomicMemoryOperation::LDAPRH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b0111'1000'1110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPALH },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADD_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLR_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEOR_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSET_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAX_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMIN_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAX_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMIN_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWP_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'0110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPA_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1010'0000'1100'0000'0000'0000,
              AtomicMemoryOperation::LDAPR_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1011'1000'1110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPAL_32BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADD_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLR_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEOR_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSET_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAX_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMIN_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAX_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMIN_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWP_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'0110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPA_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1010'0000'1100'0000'0000'0000,
              AtomicMemoryOperation::LDAPR_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0000'0000'0000'0000,
              AtomicMemoryOperation::LDADDAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0001'0000'0000'0000,
              AtomicMemoryOperation::LDCLRAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0010'0000'0000'0000,
              AtomicMemoryOperation::LDEORAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0011'0000'0000'0000,
              AtomicMemoryOperation::LDSETAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0100'0000'0000'0000,
              AtomicMemoryOperation::LDSMAXAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0101'0000'0000'0000,
              AtomicMemoryOperation::LDSMINAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0110'0000'0000'0000,
              AtomicMemoryOperation::LDUMAXAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'0111'0000'0000'0000,
              AtomicMemoryOperation::LDUMINAL_64BIT },
            { 0b1111'1111'1110'0000'1111'1100'0000'0000, 0b1111'1000'1110'0000'1000'0000'0000'0000,
              AtomicMemoryOperation::SWPAL_64BIT },
        } } };
    inline static constexpr Table< LoadStoreRegisterRegisterOffset,
                                   std::underlying_type_t< LoadStoreRegisterRegisterOffset >,
                                   enum_size_v< LoadStoreRegisterRegisterOffset > + 8 >
        LoadStoreRegisterRegisterOffsetTable { { {
            { 0b1111'1111'1110'0000'1110'1100'0000'0000, 0b0011'1000'0010'0000'0110'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRBr_SHIFTED },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRBr_EXTENDED },
            { 0b1111'1111'1110'0000'1110'1100'0000'0000, 0b0011'1000'0110'0000'0110'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRBr_SHIFTED },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRBr_EXTENDED },
            { 0b1111'1111'1110'0000'1110'1100'0000'0000, 0b0011'1000'1010'0000'0110'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSBr_64BIT_SHIFTED },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSBr_64BIT_EXTENDED },
            { 0b1111'1111'1110'0000'1110'1100'0000'0000, 0b0011'1000'1110'0000'0110'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSBr_32BIT_SHIFTED },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1000'1110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSBr_32BIT_EXTENDED },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'1010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0011'1100'1110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRHr },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRHr },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSHr_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1000'1110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSHr_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1100'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b0111'1100'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_32BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1000'1010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRSWr },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1100'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1011'1100'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_64BIT },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1000'1010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::PRFMr },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1100'0010'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::STRr_SIMD },
            { 0b1111'1111'1110'0000'0000'1100'0000'0000, 0b1111'1100'0110'0000'0000'1000'0000'0000,
              LoadStoreRegisterRegisterOffset::LDRr_SIMD },
        } } };
    inline static constexpr Table< LoadStoreRegisterPAC, std::underlying_type_t< LoadStoreRegisterPAC >,
                                   enum_size_v< LoadStoreRegisterPAC > >
        LoadStoreRegisterPACTable { { {
            { 0b1111'1111'1010'0000'0000'1100'0000'0000, 0b1111'1000'0010'0000'0000'0100'0000'0000,
              LoadStoreRegisterPAC::LDRAA_OFFSET },
            { 0b1111'1111'1010'0000'0000'1100'0000'0000, 0b1111'1000'0010'0000'0000'1100'0000'0000,
              LoadStoreRegisterPAC::LDRAA_PREINDEXED },
            { 0b1111'1111'1010'0000'0000'1100'0000'0000, 0b1111'1000'1010'0000'0000'0100'0000'0000,
              LoadStoreRegisterPAC::LDRAB_OFFSET },
            { 0b1111'1111'1010'0000'0000'1100'0000'0000, 0b1111'1000'1010'0000'0000'1100'0000'0000,
              LoadStoreRegisterPAC::LDRAB_PREINDEXED },
        } } };
    inline static constexpr Table< LoadStoreRegisterUnsignedImmediate,
                                   std::underlying_type_t< LoadStoreRegisterUnsignedImmediate >,
                                   enum_size_v< LoadStoreRegisterUnsignedImmediate > >
        LoadStoreRegisterUnsignedImmediateTable { { {
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRBi },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRBi },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRSBi_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1001'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRSBi_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_8BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_8BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1101'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_128BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0011'1101'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_128BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0111'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRHi },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0111'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRHi },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0111'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRSHi_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0111'1001'1100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRSHi_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0111'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_16BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b0111'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_16BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1011'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1011'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_32BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1011'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRSWi },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1011'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1011'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_32BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1111'1001'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1111'1001'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_64BIT },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1111'1001'1000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::PRFMi },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1111'1101'0000'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::STRi_64BIT_SIMD },
            { 0b1111'1111'1100'0000'0000'0000'0000'0000, 0b1111'1101'0100'0000'0000'0000'0000'0000,
              LoadStoreRegisterUnsignedImmediate::LDRi_64BIT_SIMD },
        } } };

    template < A64LoadStoreGroup InstructionClass >
    [[nodiscard]] auto GetInstructionClassTableInternal() const noexcept {
        if constexpr (InstructionClass == A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_MULTIPLE_STRUCTURES) {
            return AdvancedSIMDLoadStoreMultipleStructuresTable;
        } else if constexpr (InstructionClass ==
                             A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_MULTIPLE_STRUCTURES_POST_INDEXED) {
            return AdvancedSIMDLoadStoreMultipleStructuresPostIndexedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_SINGLE_STRUCTURE) {
            return AdvancedSIMDLoadStoreSingleStructureTable;
        } else if constexpr (InstructionClass ==
                             A64LoadStoreGroup::ADVANCED_SIMD_LOAD_STORE_SINGLE_STRUCTURE_POST_INDEXED) {
            return AdvancedSIMDLoadStoreSingleStructurePostIndexedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_MEMORY_TAG) {
            return LoadStoreMemoryTagTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_EXCLUSIVE) {
            return LoadStoreExclusiveTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LDAPR_STLR_UNSCALED_IMMEDIATE) {
            return LdaprStlrUnscaledImmediateTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_REGISTER_LITERAL) {
            return LoadRegisterLiteralTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_NO_ALLOCATE_PAIR_OFFSET) {
            return LoadStoreNoAllocatePairOffsetTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_PAIR_POST_INDEXED) {
            return LoadStoreRegisterPairPostIndexedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_PAIR_OFFSET) {
            return LoadStoreRegisterPairOffsetTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_PAIR_PRE_INDEXED) {
            return LoadStoreRegisterPairPreIndexedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_UNSCALED_IMMEDIATE) {
            return LoadStoreRegisterUnscaledImmediateTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_IMMEDIATE_POST_INDEXED) {
            return LoadStoreRegisterImmediatePostIndexedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_UNPRIVILEGED) {
            return LoadStoreRegisterUnprivilegedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_IMMEDIATE_PRE_INDEXED) {
            return LoadStoreRegisterImmediatePreIndexedTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::ATOMIC_MEMORY_OPERATION) {
            return AtomicMemoryOperationTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_REGISTER_OFFSET) {
            return LoadStoreRegisterRegisterOffsetTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_PAC) {
            return LoadStoreRegisterPACTable;
        } else if constexpr (InstructionClass == A64LoadStoreGroup::LOAD_STORE_REGISTER_UNSIGNED_IMMEDIATE) {
            return LoadStoreRegisterUnsignedImmediateTable;
        } else {
            throw ARM_EMU_EXCEPTION; // Compile time error detection
        }
    }

    [[nodiscard]] A64LoadStoreGroup GetInstructionClassInternal(const Instruction& instruction) const noexcept final {
        return A64LoadStoreGroupTable.Lookup(instruction.Get());
    }

  public:
    template < InstructionGroup InstructionClass >
    [[nodiscard]] auto GetInstructionType(const Instruction& instruction) const noexcept {
        const auto& mTable = GetInstructionClassTableInternal< InstructionClass >();
        return mTable.Lookup(instruction.Get());
    }
};

END_NAMESPACE

#endif // !defined(LOADSTORE_H_INCLUDED_8994011C_4196_443A_BABE_4FF197AC10E4)
